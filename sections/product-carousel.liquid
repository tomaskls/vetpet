{% style %}
      .product-carousel {
        position: relative;
        width: 100%;
        overflow: hidden;
        margin: 2rem auto;
        padding: 0 2rem;
        max-width: 1400px;
      }

      .product-carousel__container {
        position: relative;
        margin: 0 auto;
        max-width: 100%;
         overflow: hidden;
      }

      .product-carousel__track {
        display: flex;
        transition: transform 0.5s ease;
        gap: {{ section.settings.gap }}px;
        justify-content: center;
      }

      .product-carousel__slide {
        min-width: {{ section.settings.card_width }}px;
        flex: 0 0 {{ section.settings.card_width }}px;
        text-decoration: none;
        border-style: {{ section.settings.border_style }};
        border-width: 1px;
        border-color: rgba(0, 0, 0, 0.1);
      }

     @media screen and (max-width: 749px) {
      .product-carousel__slide {
        min-width: calc(50% - {{ section.settings.gap }}px);
        flex: 0 0 calc(50% - {{ section.settings.gap }}px);
      }
    }

      .product-carousel__image-wrapper {
        position: relative;
        width: 100%;
        overflow: hidden;
      }

      .product-carousel__image-wrapper img {
        position: absolute;
        width: 100%;
        height: 100%;
        object-fit: cover;
      }

      .product-carousel__text {
        padding: 1rem;
        text-align: center;
      }

    .product-carousel__button {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    z-index: 2;
    background: rgba(255, 255, 255, 0.9);
    border: 1px solid rgba(0, 0, 0, 0.1);
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: opacity 0.2s ease;
    padding: 0;
  }

      .product-carousel__button--prev {
        left: 1rem;
        transform: translateY(-50%) rotate(180deg);
      }

      .product-carousel__button--next {
        right: 1rem;
      }

      .product-carousel__button:hover {
        opacity: 0.8;
      }

      /* Animacijos */
      .product-carousel[data-animation="fade"] .product-carousel__track {
        transition: opacity 0.5s ease;
      }

      .product-carousel[data-animation="zoom"] .product-carousel__slide {
        transition: transform 0.5s ease;
      }

      /* Adaptyvus dizainas */
      @media screen and (min-width: 750px) {
        .product-carousel__track {
          --slides-per-view: 5;
        }
      }

      @media screen and (max-width: 749px) {
        .product-carousel__track {
          --slides-per-view: 2;
        }

        .product-carousel__button {
          width: 32px;
          height: 32px;
        }
      }
{% endstyle %}

<script>
class ProductCarousel extends HTMLElement {
  constructor() {
    super();
    this.track = this.querySelector('.product-carousel__track');
    this.slides = this.querySelectorAll('.product-carousel__slide');
    this.prevButton = this.querySelector('.product-carousel__button--prev');
    this.nextButton = this.querySelector('.product-carousel__button--next');
    this.currentIndex = 0;
    
    this.autoplay = this.dataset.autoplay === 'true';
    this.interval = parseInt(this.dataset.interval) || 5000;
    this.animation = this.dataset.animation || 'slide';
    
    // Fiksuojame maksimalų kortelių skaičių
    this.maxSlidesPerView = window.innerWidth >= 750 ? 5 : 2;
    this.init();
  }

  init() {
    this.calculateVisibleSlides();
    
    this.prevButton.addEventListener('click', () => this.slide('prev'));
    this.nextButton.addEventListener('click', () => this.slide('next'));
    window.addEventListener('resize', this.handleResize.bind(this));
    
    if (this.autoplay) {
      this.startAutoplay();
    }
    
    this.updateNavigationState();
  }

  calculateVisibleSlides() {
    const containerWidth = this.querySelector('.product-carousel__container').offsetWidth;
    const slideWidth = parseInt(getComputedStyle(this.slides[0]).minWidth);
    const gap = parseInt(getComputedStyle(this.track).gap);
    
    // Apskaičiuojame, kiek kortelių telpa, bet neviršijame maksimalaus skaičiaus
    this.slidesPerView = Math.min(
      Math.floor((containerWidth + gap) / (slideWidth + gap)),
      this.maxSlidesPerView
    );
  }

  slide(direction) {
    const maxIndex = Math.max(0, this.slides.length - this.slidesPerView);
    
    if (direction === 'next' && this.currentIndex < maxIndex) {
      this.currentIndex = Math.min(this.currentIndex + this.slidesPerView, maxIndex);
    } else if (direction === 'prev' && this.currentIndex > 0) {
      this.currentIndex = Math.max(0, this.currentIndex - this.slidesPerView);
    }

    this.updateSlidePosition();
    this.updateNavigationState();
  }

  updateSlidePosition() {
    const slideWidth = this.slides[0].offsetWidth;
    const gap = parseInt(getComputedStyle(this.track).gap);
    const offset = this.currentIndex * (slideWidth + gap);
    
    this.track.style.transform = `translateX(-${offset}px)`;
  }

  updateNavigationState() {
    const maxIndex = Math.max(0, this.slides.length - this.slidesPerView);
    
    this.prevButton.disabled = this.currentIndex <= 0;
    this.nextButton.disabled = this.currentIndex >= maxIndex;
    
    this.prevButton.style.opacity = this.prevButton.disabled ? '0.5' : '1';
    this.nextButton.style.opacity = this.nextButton.disabled ? '0.5' : '1';
  }

  handleResize() {
    this.calculateVisibleSlides();
    this.updateSlidePosition();
    this.updateNavigationState();
  }
}

customElements.define('product-carousel', ProductCarousel);
</script>

<div
  class="product-carousel"
  data-autoplay="{{ section.settings.autoplay }}"
  data-interval="{{ section.settings.autoplay_interval }}"
  data-animation="{{ section.settings.slide_animation }}"
>
  <div class="product-carousel__container">
    <button
      type="button"
      class="product-carousel__button product-carousel__button--prev"
      aria-label="{{ 'sections.carousel.previous_slide' | t }}"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <polyline points="9 18 15 12 9 6"></polyline>
      </svg>
    </button>

    <div class="product-carousel__track">
      {%- for block in section.blocks -%}
        <a href="{{ block.settings.link }}" class="product-carousel__slide" {{ block.shopify_attributes }}>
          {%- if block.settings.image -%}
            <div class="product-carousel__image-wrapper" style="height: {{ section.settings.image_height }}px">
              {{
                block.settings.image
                | image_url: width: 533
                | image_tag:
                  loading: 'lazy',
                  sizes: '(min-width: 990px) 20vw, (min-width: 750px) 50vw, 100vw',
                  widths: '165, 360, 533'
              }}
            </div>
          {%- endif -%}
          <div
            class="product-carousel__text"
            style="
              background-color: {{ block.settings.background_color }};
              color: {{ block.settings.text_color }};
              font-size: {{ section.settings.text_size }}px;
            "
          >
            {{ block.settings.text }}
          </div>
        </a>
      {%- endfor -%}
    </div>

    <button
      type="button"
      class="product-carousel__button product-carousel__button--next"
      aria-label="{{ 'sections.carousel.next_slide' | t }}"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <polyline points="9 18 15 12 9 6"></polyline>
      </svg>
    </button>
  </div>
</div>

{% schema %}
{
  "name": "Product Carousel",
  "settings": [
    {
      "type": "range",
      "id": "image_height",
      "min": 100,
      "max": 500,
      "step": 10,
      "unit": "px",
      "label": "Nuotraukos aukštis",
      "default": 300
    },
    {
      "type": "range",
      "id": "card_width",
      "min": 200,
      "max": 400,
      "step": 10,
      "unit": "px",
      "label": "Kortelės plotis",
      "default": 250
    },
    {
      "type": "range",
      "id": "gap",
      "min": 0,
      "max": 40,
      "step": 4,
      "unit": "px",
      "label": "Tarpas tarp kortelių",
      "default": 16
    },
    {
      "type": "select",
      "id": "border_style",
      "label": "Kortelės rėmelio stilius",
      "options": [
        {
          "value": "none",
          "label": "Be rėmelio"
        },
        {
          "value": "solid",
          "label": "Vientisas"
        },
        {
          "value": "dashed",
          "label": "Brūkšninis"
        }
      ],
      "default": "none"
    },
    {
      "type": "range",
      "id": "text_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Teksto dydis",
      "default": 16
    },
    {
      "type": "select",
      "id": "slide_animation",
      "label": "Slinkimo animacija",
      "options": [
        {
          "value": "slide",
          "label": "Paprastas slinkimas"
        },
        {
          "value": "fade",
          "label": "Išnykimas"
        },
        {
          "value": "zoom",
          "label": "Priartinimas"
        }
      ],
      "default": "slide"
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Įjungti automatinį slinkimą",
      "default": false
    },
    {
      "type": "range",
      "id": "autoplay_interval",
      "min": 2000,
      "max": 8000,
      "step": 500,
      "unit": "ms",
      "label": "Automatinio slinkimo intervalas",
      "default": 5000
    }
  ],
  "blocks": [
    {
      "type": "slide",
      "name": "Karuselės kortelė",
      "settings": [
        {
          "type": "url",
          "id": "link",
          "label": "Nuorodos URL"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Nuotrauka"
        },
        {
          "type": "text",
          "id": "text",
          "label": "Tekstas",
          "default": "Kortelės tekstas"
        },
        {
          "type": "color",
          "id": "text_color",
          "label": "Teksto spalva",
          "default": "#ffffff"
        },
        {
          "type": "color",
          "id": "background_color",
          "label": "Teksto fono spalva",
          "default": "#000000"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Product Carousel",
      "blocks": [
        {
          "type": "slide"
        },
        {
          "type": "slide"
        },
        {
          "type": "slide"
        }
      ]
    }
  ]
}
{% endschema %}
